{"version":3,"sources":["calendar/utils/useStorage.js","calendar/scheduleSection/ScheduleHeader.js","eventsSeed/seed.js","calendar/utils/index.js","calendar/utils/getSelectedDay.js","calendar/scheduleSection/ScheduleBody.js","calendar/scheduleSection/ScheduleBar.js","calendar/calendarSection/Weekdays.js","calendar/calendarSection/CalendarCell.js","calendar/calendarSection/CalendarControls.js","calendar/calendarSection/CalendarDay.js","calendar/calendarSection/NewEvent.js","calendar/calendarSection/CalendarView.js","calendar/utils/usePrev.js","calendar/CalendarWrapper.js","App.js","Netflix.js","serviceWorker.js","index.js"],"names":["StorageChangedEvent","payload","onStorageChange","detail","CustomEvent","key","empty","store","storage","window","useState","getItem","JSON","parse","value","setValue","setState","useCallback","state","newValue","setItem","stringify","dispatchEvent","storageArea","useEffect","event","id","undefined","addEventListener","removeEventListener","ScheduleHeader","useStorage","selectedDay","date","useContext","DateContext","currentMonth","format","currentDay","moment","set","currentYear","currentWeekDay","className","meetingRooms","meetings","start","end","name","meetingRoom","participants","fillRooms","events","rooms","Object","keys","forEach","e","scheduledEventsperRoomForDay","reduce","r","a","room","push","range","size","startAt","Array","map","i","getSelectedHours","eventsPerDay","scheduledHours","element","ends","starts","rangeHours","checkForFreeSlot","roomsAvalability","usedRooms","some","includes","getSelectedDay","ScheduleHour","hour","setEventCreation","setEvents","selectedDate","setRooms","hasScheduledMeet","isStartOfMeet","created","selectedMeets","filter","checkAvailability","hasFreeSlot","onCreateEvent","allEventsPerDay","onEventRemove","meet","filteredEventsPerDay","onClick","selectedMeet","stopPropagation","ScheduleBody","ScheduleBar","Weekdays","weekdayshort","weekdaysShort","day","Cell","setSelected","firstDay","parseInt","startOf","cell","isCurrentDate","currentDate","hasSomeEvent","isArray","CalendarControls","setDate","onPrev","subtract","onNext","add","CalendarCells","daysInSelectedMonth","daysInMonth","CalendarDay","NewEvent","Math","min","form","setForm","error","setError","onSave","currentSelectedDay","onCancelCreate","onChange","field","target","futureStart","max","futureEndsWhenStartChanged","newEnds","useMemo","isTsarevecFree","isArbanasiFree","type","data-testid","CalendarView","creatingEvent","find","ref","useRef","current","React","createContext","CalendarWrapper","prevSelected","usePrev","prevEventCreation","console","log","Promise","res","setTimeout","data","then","response","length","updatedEvents","acc","curr","meetDate","meetDateLabel","substr","indexOf","Provider","App","Netflix","href","src","alt","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.6f87826c.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\nclass StorageChangedEvent extends CustomEvent {\n  constructor(payload) {\n    super(StorageChangedEvent.onStorageChange, { detail: payload });\n  }\n}\n\nexport default (key, empty, store = \"session\") => {\n  const storage = window[store + \"Storage\"];\n  const [value, setValue] = useState(() =>\n    storage.getItem(key) ? JSON.parse(storage.getItem(key)) : empty\n  );\n\n  const setState = useCallback(\n    (state) => {\n      const newValue = typeof state === \"function\" ? state(value) : state;\n      storage.setItem(key, JSON.stringify(newValue));\n      window.dispatchEvent(\n        new StorageChangedEvent({ key, newValue, storageArea: storage })\n      );\n    },\n    [key, value, storage]\n  );\n\n  useEffect(() => {\n    if (!storage.getItem(key)) {\n      empty && setState(empty); //setting the default value\n    }\n  }, [empty, key, storage]); //eslint-disable-line\n\n  useEffect(() => {\n    const onStorageChange = (event) => {\n      const payload = event.detail || event;\n      const { key: id, newValue, storageArea } = payload;\n\n      if (storageArea === storage && id === key && newValue !== undefined) {\n        setValue(newValue);\n      }\n    };\n\n    window.addEventListener(\n      StorageChangedEvent.onStorageChange,\n      onStorageChange\n    );\n\n    return () => {\n      window.removeEventListener(\n        StorageChangedEvent.onStorageChange,\n        onStorageChange\n      );\n    };\n  }, [key, storage]);\n\n  return [value, setState];\n};\n","import React, { useContext } from \"react\";\nimport { DateContext } from \"../CalendarWrapper\";\nimport moment from \"moment\";\nimport useStorage from \"../utils/useStorage\";\n\nfunction ScheduleHeader() {\n  const [selectedDay] = useStorage(\"Store.selectedDay\", \"\");\n  const { date } = useContext(DateContext);\n  const currentMonth = date.format(\"MMMM\");\n  let currentDay = moment().format(\"D\");\n\n  date.set(\"date\", selectedDay || currentDay);\n\n  let currentYear = date.format(\"Y\");\n  let currentWeekDay = date.format(\"dddd\");\n\n  return (\n    <div className=\"header\">\n      <h1 className=\"flex centered blackCell\">{`${\n        selectedDay || currentDay\n      } ${currentMonth} ${currentYear}`}</h1>\n      <h2 className=\"flex centered blackCell\"> {currentWeekDay}</h2>\n    </div>\n  );\n}\n\nexport default ScheduleHeader;\n","export default {\n  meetingRooms: [\"Tsarevets\", \"Arbanasi\"],\n  meetings: [\n    {\n      start: \"2020-06-03T11:00:00.000Z\",\n      end: \"2020-06-03T12:00:00.000Z\",\n      name: \"Interview With A New Colleague\",\n      meetingRoom: \"Tsarevets\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-03T14:00:00.000Z\",\n      end: \"2020-06-03T15:30:00.000Z\",\n      name: \"Daily Standup\",\n      meetingRoom: \"Tsarevets\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-03T12:00:00.000Z\",\n      end: \"2020-06-03T13:00:00.000Z\",\n      name: \"Performance Review\",\n      meetingRoom: \"Tsarevets\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-03T15:30:00.000Z\",\n      end: \"2020-06-03T16:00:00.000Z\",\n      name: \"New Sprint Planning\",\n      meetingRoom: \"Tsarevets\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-03T17:00:00.000Z\",\n      end: \"2020-06-03T18:00:00.000Z\",\n      name: \"Happy Hour\",\n      meetingRoom: \"Tsarevets\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-03T11:00:00.000Z\",\n      end: \"2020-06-03T12:00:00.000Z\",\n      name: \"MVP Presentation\",\n      meetingRoom: \"Arbanasi\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-03T12:00:00.000Z\",\n      end: \"2020-06-03T13:00:00.000Z\",\n      name: \"Interview With A New Colleague\",\n      meetingRoom: \"Arbanasi\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-03T10:00:00.000Z\",\n      end: \"2020-06-03T11:00:00.000Z\",\n      name: \"Morning Coffee Meeting\",\n      meetingRoom: \"Arbanasi\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-04T12:00:00.000Z\",\n      end: \"2020-06-04T13:00:00.000Z\",\n      name: \"Interview With A New Colleague\",\n      meetingRoom: \"Tsarevets\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-04T14:00:00.000Z\",\n      end: \"2020-06-04T15:30:00.000Z\",\n      name: \"Daily Standup\",\n      meetingRoom: \"Tsarevets\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-04T11:00:00.000Z\",\n      end: \"2020-06-04T12:00:00.000Z\",\n      name: \"MVP Presentation\",\n      meetingRoom: \"Arbanasi\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-04T10:00:00.000Z\",\n      end: \"2020-06-04T11:00:00.000Z\",\n      name: \"Morning Coffee Meeting\",\n      meetingRoom: \"Arbanasi\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-05T10:00:00.000Z\",\n      end: \"2020-06-05T11:00:00.000Z\",\n      name: \"Presentation\",\n      meetingRoom: \"Tsarevets\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-05T14:00:00.000Z\",\n      end: \"2020-06-05T15:30:00.000Z\",\n      name: \"Daily Standup\",\n      meetingRoom: \"Tsarevets\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-05T11:00:00.000Z\",\n      end: \"2020-06-05T12:00:00.000Z\",\n      name: \"Conference Call\",\n      meetingRoom: \"Arbanasi\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-05T10:00:00.000Z\",\n      end: \"2020-06-05T10:30:00.000Z\",\n      name: \"Morning Coffee Meeting\",\n      meetingRoom: \"Arbanasi\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-09T10:00:00.000Z\",\n      end: \"2020-06-09T11:00:00.000Z\",\n      name: \"Presentation\",\n      meetingRoom: \"Tsarevets\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-09T14:00:00.000Z\",\n      end: \"2020-06-09T15:30:00.000Z\",\n      name: \"Daily Standup\",\n      meetingRoom: \"Tsarevets\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-09T11:00:00.000Z\",\n      end: \"2020-06-09T12:00:00.000Z\",\n      name: \"Conference Call\",\n      meetingRoom: \"Arbanasi\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-09T10:00:00.000Z\",\n      end: \"2020-06-09T10:30:00.000Z\",\n      name: \"Morning Coffee Meeting\",\n      meetingRoom: \"Arbanasi\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-10T10:00:00.000Z\",\n      end: \"2020-06-10T11:00:00.000Z\",\n      name: \"Presentation\",\n      meetingRoom: \"Tsarevets\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-10T14:00:00.000Z\",\n      end: \"2020-06-10T15:30:00.000Z\",\n      name: \"Daily Standup\",\n      meetingRoom: \"Tsarevets\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-10T11:00:00.000Z\",\n      end: \"2020-06-10T12:00:00.000Z\",\n      name: \"Conference Call\",\n      meetingRoom: \"Arbanasi\",\n      participants: [],\n    },\n    {\n      start: \"2020-06-10T10:00:00.000Z\",\n      end: \"2020-06-10T10:30:00.000Z\",\n      name: \"Morning Coffee Meeting\",\n      meetingRoom: \"Arbanasi\",\n      participants: [],\n    },\n  ],\n};\n","import data from \"../../eventsSeed/seed\";\n\nexport const fillRooms = (events) => {\n  const rooms = {};\n  Object.keys(events).forEach((e) => {\n    const eventsPerDay = events[e];\n    const scheduledEventsperRoomForDay = eventsPerDay.reduce((r, a) => {\n      r[a.room] = r[a.room] || [];\n      r[a.room].push(a);\n      return r;\n    }, {});\n    rooms[e] = scheduledEventsperRoomForDay;\n  });\n  return rooms;\n};\n\nexport const fetchData = () =>\n  new Promise((res) => {\n    setTimeout(() => res(data), 0);\n  });\n\nexport function range(size, startAt = 0) {\n  return [...Array(size).keys()].map((i) => i + startAt);\n}\n\nexport const getSelectedHours = (eventsPerDay) => {\n  let scheduledHours = [];\n  eventsPerDay.forEach((element) => {\n    if (element.ends && (element.starts || element.starts === 0)) {\n      let rangeHours = range(element.ends - element.starts, element.starts);\n      scheduledHours.push(...rangeHours);\n    }\n  });\n  return scheduledHours;\n};\nexport const checkForFreeSlot = (roomsAvalability) => (\n  date,\n  room,\n  starts,\n  ends\n) => {\n  const usedRooms =\n    roomsAvalability[date] !== undefined\n      ? roomsAvalability[date][room] || []\n      : [];\n  const scheduledHours = getSelectedHours(usedRooms);\n  const rangePerCurrentEvent = range(ends - starts, starts);\n\n  return !rangePerCurrentEvent.some((e) => scheduledHours.includes(e));\n};\n","const getSelectedDay = (date, selectedDay) => {\n  const currentMonth = date.format(\"MMMM\");\n  let currentYear = date.format(\"Y\");\n  let currentWeekDay = date.format(\"D\");\n  return (selectedDay || currentWeekDay) + currentMonth + currentYear;\n};\nexport default getSelectedDay;\n","import React, { useContext, useCallback } from \"react\";\nimport { DateContext } from \"../CalendarWrapper\";\nimport useStorage from \"../utils/useStorage\";\nimport { getSelectedHours, checkForFreeSlot, fillRooms } from \"../utils/\";\nimport getSelectedDay from \"../utils/getSelectedDay\";\n\nconst ScheduleHour = ({ hour }) => {\n  const { date, setEventCreation } = useContext(DateContext);\n  const [events, setEvents] = useStorage(\"Store.events\", {});\n  const [selectedDay] = useStorage(\"Store.selectedDay\", \"\");\n  const selectedDate = getSelectedDay(date, selectedDay);\n  const eventsPerDay = events[selectedDate] || [];\n  const [rooms, setRooms] = useStorage(\"Store.roomAvailability\", {});\n\n  const scheduledHours = getSelectedHours(eventsPerDay);\n  const hasScheduledMeet = scheduledHours.includes(hour);\n\n  const isStartOfMeet = eventsPerDay.some(\n    (e) => e.starts === hour && e.created === true\n  );\n  const selectedMeets = eventsPerDay.filter((e) => e.starts === hour);\n  const checkAvailability = checkForFreeSlot(rooms);\n\n  const hasFreeSlot =\n    checkAvailability(selectedDate, \"Arbanasi\", hour, hour + 1) ||\n    checkAvailability(selectedDate, \"Tsarevets\", hour, hour + 1);\n\n  const onCreateEvent = useCallback(() => {\n    setEventCreation(true);\n    const allEventsPerDay = events[selectedDate] || [];\n    events[selectedDate] = [\n      ...allEventsPerDay,\n      { starts: hour, ends: null, room: null, created: false },\n    ];\n    setEvents(events);\n  }, [setEventCreation, events, selectedDate, setEvents, hour]);\n\n  const onEventRemove = useCallback(\n    (meet) => {\n      let filteredEventsPerDay = events[selectedDate].filter(\n        (e) =>\n          !(\n            e.starts === meet.starts &&\n            e.ends === meet.ends &&\n            e.room === meet.room\n          )\n      );\n      events[selectedDate] = filteredEventsPerDay;\n      setEvents(events);\n      setRooms(fillRooms(events));\n    },\n    [selectedDate, setEvents, events, setRooms]\n  );\n\n  return (\n    <div\n      className={`line ${hasScheduledMeet ? \"hasScheduledMeet\" : \"\"}`}\n      onClick={hasFreeSlot ? onCreateEvent : null}\n    >\n      {isStartOfMeet &&\n        selectedMeets\n          .filter((e) => e.created)\n          .map((selectedMeet) => {\n            return (\n              <div key={selectedMeet.name + selectedMeet.room} className=\"flex\">\n                <p\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onEventRemove(selectedMeet);\n                  }}\n                  className={hasScheduledMeet ? \"remove\" : \"\"}\n                ></p>\n                <p>{`${selectedMeet.name}, Room: ${selectedMeet.room}, ${selectedMeet.starts}:00 - ${selectedMeet.ends}:00`}</p>\n              </div>\n            );\n          })}\n    </div>\n  );\n};\n\nfunction ScheduleBody() {\n  return (\n    <div className=\"flex column hours\">\n      {[...Array(24).keys()].map((e) => {\n        return (\n          <div className=\"flex\" key={e}>\n            <div className=\"blackCell\">{`${e > 9 ? e : \"0\" + e}:00`}</div>\n            <ScheduleHour hour={e} />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default ScheduleBody;\n","import React from \"react\";\nimport ScheduleHeader from \"./ScheduleHeader\";\nimport ScheduleBody from \"./ScheduleBody\";\n\nfunction ScheduleBar() {\n  return (\n    <div className=\"flex column schedule\">\n      <ScheduleHeader />\n      <ScheduleBody />\n    </div>\n  );\n}\n\nexport default ScheduleBar;\n","import React from \"react\";\nimport moment from \"moment\";\n\nfunction Weekdays() {\n  const weekdayshort = moment.weekdaysShort();\n\n  return (\n    <div className=\"weekdays\">\n      {weekdayshort.map((day) => (\n        <div key={day}>{day}</div>\n      ))}\n    </div>\n  );\n}\n\nexport default Weekdays;\n","import React, { useContext } from \"react\";\nimport moment from \"moment\";\nimport { DateContext } from \"../CalendarWrapper\";\nimport useStorage from \"../utils/useStorage\";\n\nfunction Cell({ day }) {\n  const { date, setEventCreation } = useContext(DateContext);\n  const [selectedDay, setSelected] = useStorage(\"Store.selectedDay\", \"\");\n  const [events] = useStorage(\"Store.events\", {});\n\n  let firstDay = parseInt(date.startOf(\"month\").format(\"d\"));\n  let currentDay = parseInt(moment().format(\"D\"));\n  let cell = day + 1 - firstDay;\n\n  if (day < firstDay) {\n    //empty cells\n    return <div key={day}></div>;\n  }\n\n  const isCurrentDate =\n    cell === currentDay && moment().format(\"MMMM\") === date.format(\"MMMM\");\n\n  let currentDate = cell + date.format(\"MMMM\") + date.format(\"Y\");\n  const hasSomeEvent = Array.isArray(events[currentDate])\n    ? events[currentDate].some((e) => e.created)\n    : false;\n\n  return (\n    <div\n      className={`centered blackCell ${hasSomeEvent ? \"hasEvent\" : \"\"} ${\n        isCurrentDate\n          ? \"currentDay\"\n          : parseInt(selectedDay) === cell\n          ? \"selectedDay\"\n          : \"\"\n      }`}\n      key={cell}\n      onClick={() => {\n        setEventCreation(false);\n        setSelected(cell);\n      }}\n    >\n      {cell}\n    </div>\n  );\n}\n\nexport default Cell;\n","import React, { useContext, useCallback } from \"react\";\nimport moment from \"moment\";\nimport { DateContext } from \"../CalendarWrapper\";\n\nfunction CalendarControls() {\n  const { date, setDate, setEventCreation } = useContext(DateContext);\n\n  const onPrev = useCallback(() => {\n    setEventCreation(false);\n    date.subtract(1, \"M\");\n    setDate(moment({ ...date }));\n  }, [date, setDate, setEventCreation]);\n\n  const onNext = useCallback(() => {\n    setEventCreation(false);\n    date.add(1, \"M\");\n    setDate(moment({ ...date }));\n  }, [date, setDate, setEventCreation]);\n\n  return (\n    <div className=\"flex controls\">\n      <button className=\"blackCell button\" onClick={onPrev}>\n        Prev\n      </button>\n      <button className=\"blackCell button\" onClick={onNext}>\n        Next\n      </button>\n    </div>\n  );\n}\n\nexport default CalendarControls;\n","import React, { useContext } from \"react\";\nimport { DateContext } from \"../CalendarWrapper\";\nimport Cell from \"./CalendarCell\";\nimport CalendarControls from \"./CalendarControls\";\n\nfunction CalendarCells() {\n  const { date } = useContext(DateContext);\n  let days = date.daysInMonth();\n  let firstDay = parseInt(date.startOf(\"month\").format(\"d\"));\n  const daysInSelectedMonth = days + firstDay;\n\n  return (\n    <div className=\"days\">\n      {[...Array(daysInSelectedMonth).keys()].map((e) => (\n        <Cell key={e} day={e} />\n      ))}\n    </div>\n  );\n}\n\nfunction CalendarDay() {\n  return (\n    <>\n      <CalendarCells />\n      <CalendarControls />\n    </>\n  );\n}\n\nexport default CalendarDay;\n","import React, { useContext, useState, useCallback, useMemo } from \"react\";\nimport useStorage from \"../utils/useStorage\";\nimport getSelectedDay from \"../utils/getSelectedDay\";\nimport { fillRooms, checkForFreeSlot } from \"../utils/\";\nimport { DateContext } from \"../CalendarWrapper\";\n\nfunction NewEvent({ event }) {\n  const [selectedDay] = useStorage(\"Store.selectedDay\", \"\");\n  const { date, setEventCreation } = useContext(DateContext);\n  const [events, setEvents] = useStorage(\"Store.events\", {});\n  const [form, setForm] = useState({\n    starts: event.starts,\n    ends: Math.min(event.starts + 1, 24),\n    room: \"empty\",\n    name: \"Event\",\n  });\n  const [rooms, setRooms] = useStorage(\"Store.roomAvailability\", {});\n  const checkAvailability = checkForFreeSlot(rooms);\n  const [error, setError] = useState(false);\n  const selectedDate = getSelectedDay(date, selectedDay);\n  let starts = form.starts === \"\" ? \"\" : parseInt(form.starts);\n  let ends = form.ends === \"\" ? \"\" : parseInt(form.ends);\n\n  const onSave = useCallback(() => {\n    if (form.room === \"empty\") {\n      setError(true);\n      return;\n    }\n\n    const currentSelectedDay = getSelectedDay(date, selectedDay);\n\n    const hasFreeSlot = checkAvailability(\n      currentSelectedDay,\n      form.room,\n      starts,\n      form.ends - 1\n    );\n\n    if (hasFreeSlot) {\n      let meet = {\n        ...form,\n        starts: starts,\n        ends,\n        room: form.room,\n        created: true,\n      };\n      if (!events[currentSelectedDay]) {\n        // TODO mock useStorage to avoid that 'if' per testing purposes\n        events[currentSelectedDay] = [];\n      }\n      events[currentSelectedDay].push(meet);\n\n      let allEventsPerDay = events[currentSelectedDay].filter(\n        (e) => e.ends !== null\n      );\n      events[currentSelectedDay] = allEventsPerDay;\n      setEvents(events);\n      setRooms(fillRooms(events));\n      setEventCreation(false);\n    } else {\n      setError(true);\n    }\n  }, [\n    date,\n    events,\n    setEvents,\n    setEventCreation,\n    selectedDay,\n    form,\n    checkAvailability,\n    setRooms,\n    starts,\n    ends,\n  ]);\n\n  const onCancelCreate = useCallback(() => {\n    const currentSelectedDay = getSelectedDay(date, selectedDay);\n    let allEventsPerDay = (events[currentSelectedDay] || []).filter(\n      (e) => e.ends !== null\n    );\n    events[currentSelectedDay] = allEventsPerDay;\n    setEvents(events);\n    setEventCreation(false);\n  }, [events, setEvents, setEventCreation, date, selectedDay]);\n  const onChange = useCallback(\n    (field) => {\n      return ({ target: { value } }) => {\n        error && setError(false);\n        setForm((state) => {\n          if (field === \"starts\") {\n            const futureStart =\n              value === \"\" ? \"\" : Math.max(0, Math.min(parseInt(value), 23));\n            const futureEndsWhenStartChanged = Math.min(\n              Math.max(value, value === \"\" ? \"\" : parseInt(value) + 1),\n              24\n            );\n            return {\n              ...state,\n              [field]: futureStart,\n              ends: futureEndsWhenStartChanged,\n            };\n          }\n          const newEnds = value === \"\" ? \"\" : Math.min(parseInt(value), 24);\n          if (field === \"ends\") {\n            return { ...state, [field]: newEnds };\n          }\n\n          return { ...state, [field]: value };\n        });\n      };\n    },\n    [setForm, setError, error]\n  );\n\n  const [isTsarevecFree, isArbanasiFree] = useMemo(() => {\n    return [\n      (starts || starts === 0) &&\n        ends &&\n        starts < ends &&\n        checkAvailability(\n          selectedDate,\n          \"Tsarevets\",\n          starts,\n          ends < starts ? starts : ends\n        ),\n      (starts || starts === 0) &&\n        ends &&\n        starts < ends &&\n        checkAvailability(\n          selectedDate,\n          \"Arbanasi\",\n          starts,\n          ends < starts ? starts : ends\n        ),\n    ];\n  }, [checkAvailability, selectedDate, starts, ends]);\n\n  return (\n    <div className=\"flex column down blackCell newevent\">\n      <h3 className=\"up\">New Event</h3>\n      <div>\n        Name<input value={form.name} onChange={onChange(\"name\")}></input>\n      </div>\n      <div>\n        Starts\n        <input\n          type=\"number\"\n          data-testid=\"start\"\n          value={starts}\n          onChange={onChange(\"starts\")}\n          className={`${form.starts === \"\" ? \"errorField\" : \"\"}`}\n        ></input>\n      </div>\n      <div>\n        Ends\n        <input\n          data-testid=\"ends\"\n          value={ends}\n          type=\"number\"\n          onChange={onChange(\"ends\")}\n          className={`${form.ends === \"\" || starts > ends ? \"errorField\" : \"\"}`}\n        ></input>\n      </div>\n      <div>\n        Room\n        <select\n          data-testid=\"room\"\n          name=\"room\"\n          onChange={onChange(\"room\")}\n          value={form.room}\n        >\n          <option value=\"empty\">\n            {!isTsarevecFree && !isArbanasiFree ? \"No room\" : \"Select room\"}\n          </option>\n          {isTsarevecFree && <option value=\"Tsarevets\">Tsarevets</option>}\n          {isArbanasiFree && <option value=\"Arbanasi\">Arbanasi</option>}\n        </select>\n      </div>\n      <div className=\"flex controls down\">\n        <button className=\"blackCell button\" onClick={onCancelCreate}>\n          Cancel\n        </button>\n        <button className=\"primary button\" onClick={onSave}>\n          Save\n        </button>\n      </div>\n      {error && <div className=\"error\">Choose a room.</div>}\n    </div>\n  );\n}\n\nexport default NewEvent;\n","import React, { useContext } from \"react\";\nimport Weekdays from \"./Weekdays\";\nimport CalendarDays from \"./CalendarDay\";\nimport NewEvent from \"./NewEvent\";\nimport { DateContext } from \"../CalendarWrapper\";\nimport useStorage from \"../utils/useStorage\";\nimport getSelectedDay from \"../utils/getSelectedDay\";\n\nfunction CalendarView() {\n  const [selectedDay] = useStorage(\"Store.selectedDay\", \"\");\n  const { creatingEvent, date } = useContext(DateContext);\n  const selectedDate = getSelectedDay(date, selectedDay);\n  const [events] = useStorage(\"Store.events\", {});\n\n  const event = (events[selectedDate] || []).find((e) => e.ends === null) || {};\n\n  return (\n    <div className=\"flex column\">\n      <div className=\"calendar\">\n        <Weekdays />\n        <CalendarDays />\n      </div>\n\n      {creatingEvent && <NewEvent event={event} />}\n    </div>\n  );\n}\n\nexport default CalendarView;\n","import { useRef, useEffect } from \"react\";\n\nexport default (value) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n};\n","import React, { useState, useEffect } from \"react\";\nimport ScheduleBar from \"./scheduleSection/ScheduleBar\";\nimport CalendarView from \"./calendarSection/CalendarView\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nimport useStorage from \"./utils/useStorage\";\nimport { fillRooms, fetchData } from \"./utils/\";\nimport getSelectedDay from \"./utils/getSelectedDay\";\nimport usePrev from \"./utils/usePrev\";\n\nexport const DateContext = React.createContext();\n\nfunction CalendarWrapper() {\n  const [date, setDate] = useState(moment());\n  const [creatingEvent, setEventCreation] = useState(false);\n  const [events, setEvents] = useStorage(\"Store.events\", {});\n  const [, setRooms] = useStorage(\"Store.roomAvailability\", {});\n  const [day] = useStorage(\"Store.selectedDay\", \"\");\n  const selectedDate = getSelectedDay(date, day);\n  const prevSelected = usePrev(selectedDate);\n  const prevEventCreation = usePrev(creatingEvent);\n  console.log(selectedDate, prevSelected);\n  useStorage(\"Store.selectedDay\", moment().format(\"D\"));\n\n  useEffect(() => {\n    fetchData().then((response) => {\n      moment(response.meetings[0].start).format(\"hh:mm\");\n      if (Object.keys(events).length !== 0) {\n        return;\n      }\n\n      const updatedEvents = response.meetings.reduce((acc, curr) => {\n        let meetDate = moment(curr.start);\n        let meetDateLabel =\n          meetDate.format(\"D\") + meetDate.format(\"MMMM\") + meetDate.format(\"Y\");\n\n        let event = {\n          starts: parseInt(curr.start.substr(curr.start.indexOf(\"T\") + 1, 5)),\n          ends: parseInt(curr.end.substr(curr.start.indexOf(\"T\") + 1, 5)),\n          name: curr.name,\n          room: curr.meetingRoom,\n          created: true,\n        };\n\n        if (Array.isArray(acc[meetDateLabel])) {\n          acc[meetDateLabel].push(event);\n        } else {\n          acc[meetDateLabel] = [];\n          acc[meetDateLabel].push(event);\n        }\n        return acc;\n      }, {});\n\n      setEvents(updatedEvents);\n      setRooms(fillRooms(updatedEvents));\n    });\n  }, [events, setEvents, setRooms]);\n\n  useEffect(() => {\n    if (prevEventCreation === creatingEvent) {\n      return;\n    }\n    let hasAnEmptyEvent = (events[prevSelected] || []).some(\n      (e) => e.ends === null\n    );\n\n    if (hasAnEmptyEvent) {\n      events[prevSelected] = (events[prevSelected] || []).filter(\n        (e) => e.created !== false\n      );\n      setEvents(events);\n      setRooms(fillRooms(events));\n    }\n  }, [\n    creatingEvent,\n    prevEventCreation,\n    events,\n    setEvents,\n    setRooms,\n    prevSelected,\n  ]);\n\n  return (\n    <div className=\"wrapper\">\n      <DateContext.Provider\n        value={{ date, setDate, creatingEvent, setEventCreation }}\n      >\n        <ScheduleBar />\n        <CalendarView />\n      </DateContext.Provider>\n  \n    </div>\n  );\n}\n\nexport default CalendarWrapper;\n","import React from \"react\";\nimport \"./calendar/styles/index.css\";\nimport CalendarWrapper from \"./calendar/CalendarWrapper\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header flex centered\">\n        <CalendarWrapper />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport \"./calendar/styles/index.css\";\nimport \"./calendar/styles/Netflix.css\";\n\nconst Netflix = () => {\n  console.log(\"render n\");\n  return (\n    <div className=\"container\">\n      <a href=\"#animals\" className=\"item\">\n        <img src=\"https://placeimg.com/640/480/animals\" alt=\"Animals\" />\n      </a>\n      <a href=\"#architecture\" className=\"item\">\n        <img\n          src=\"https://placeimg.com/640/480/architecture\"\n          alt=\"Architecture\"\n        />\n      </a>\n      <a href=\"#nature\" className=\"item\">\n        <img src=\"https://placeimg.com/640/480/nature\" alt=\"Nature\" />\n      </a>\n      <a href=\"#people\" className=\"item\">\n        <img src=\"https://placeimg.com/640/480/people\" alt=\"People\" />\n      </a>\n      <a href=\"#tech\" className=\"item\">\n        <img src=\"https://placeimg.com/640/480/tech\" alt=\"Tech\" />\n      </a>\n    </div>\n  );\n};\nexport default Netflix;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Netflix from \"./Netflix\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Netflix />\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}