{"version":3,"sources":["logo.svg","calendar/utils/useStorage.js","calendar/rightbar/CalendarHeaders.js","calendar/eventsSeed/seed.js","calendar/utils/index.js","calendar/utils/getSelectedDay.js","calendar/rightbar/Hours.js","calendar/rightbar/CalendarBar.js","calendar/leftbar/Weekdays.js","calendar/leftbar/CalendarCell.js","calendar/leftbar/CalendarDay.js","calendar/leftbar/NewEvent.js","calendar/leftbar/DetailedTime.js","calendar/CalendarWrapper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StorageChangedEvent","payload","onStorageChange","detail","CustomEvent","key","empty","store","storage","window","useState","getItem","JSON","parse","value","setValue","setState","useCallback","state","newValue","setItem","stringify","dispatchEvent","storageArea","useEffect","event","id","undefined","addEventListener","removeEventListener","CalendarHeader","useStorage","selectedDay","date","useContext","DateContext","currentMonth","format","currentDay","moment","set","currentYear","currentWeekDay","fillRooms","events","rooms","Object","keys","forEach","e","scheduledEventsperRoomForDay","reduce","r","a","room","push","range","size","startAt","Array","map","i","getSelectedHours","eventsPerDay","scheduledHours","element","ends","starts","rangeHours","checkForFreeSlot","roomsAvalability","usedRooms","some","includes","getSelectedDay","Line","hour","setEventCreation","setEvents","selectedDate","hasScheduledMeet","isStartOfMeet","created","selectedMeets","filter","checkAvailability","hasFreeSlot","onCreateEvent","allEventsPerDay","className","onClick","selectedMeet","name","Hours","slice","TimeBar","CalendarHeaders","Weekdays","weekdayshort","weekdaysShort","day","Cell","setSelected","firstDay","parseInt","startOf","cell","isCurrentDate","currentDate","hasSomeEvent","isArray","length","CalendarCells","daysInSelectedMonth","daysInMonth","Controls","setDate","onPrev","subtract","onNext","add","CalendarDay","NewEvent","Math","min","form","setForm","setRooms","error","setError","onSave","currentSelectedDay","meet","onCancelCreate","onChange","field","target","useMemo","isTsarevecFree","isArbanasiFree","readOnly","type","DetailedTime","creatingEvent","find","React","createContext","CalendarWrapper","Promise","res","setTimeout","data","then","response","meetings","start","meetDate","meetDateLabel","substr","indexOf","end","meetingRoom","Provider","CalendarBar","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.38aafda8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { useState, useEffect, useCallback } from 'react'\n\nclass StorageChangedEvent extends CustomEvent {\n\n\tconstructor(payload) {\n\t\tsuper(StorageChangedEvent.onStorageChange, { detail: payload })\n\t}\n}\n\nexport default (key, empty, store = 'session') => {\n\tconst storage = window[store + 'Storage']\n\tconst [ value, setValue ] = useState(() => storage.getItem(key) ? JSON.parse(storage.getItem(key)) : empty)\n  \n    \n\tconst setState = useCallback((state) => {\n        //console.log('setstate', state)\n        const newValue = typeof(state) === 'function' ? state(value) : state\n\t\tstorage.setItem(key, JSON.stringify(newValue))\n\t\twindow.dispatchEvent(new StorageChangedEvent({ key, newValue, storageArea: storage }))\n    }, [key, value, storage]);\n    \n    useEffect(()=>{\n        if(! storage.getItem(key)){\n            //console.log('storage.getItem(key)')\n            empty &&setState(empty)//setting the default value\n\n        }\n    },[empty,key,storage]);//eslint-disable-line\n\n\tuseEffect(() => {\n\t\tconst onStorageChange = (event) => {\n\t\t\tconst payload = event.detail || event\n\t\t\tconst { key: id, newValue, storageArea } = payload\n\n\t\t\tif (storageArea === storage && id === key&&newValue!== undefined) {\n              //  console.log(newValue,key)\n\n\t\t\t\tsetValue(newValue)\n\t\t\t}\n\t\t}\n\n\t\twindow.addEventListener(StorageChangedEvent.onStorageChange, onStorageChange)\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(StorageChangedEvent.onStorageChange, onStorageChange)\n\t\t}\n\t}, [key, storage])\n\n\treturn [value, setState]\n}\n","import React, {useContext} from 'react';\nimport {DateContext} from '../CalendarWrapper'\nimport moment from 'moment'\nimport useStorage from '../utils/useStorage';\n\nfunction CalendarHeader() {\n  const [selectedDay]= useStorage('Store.selectedDay','');\n  const {date} = useContext(DateContext);\n  const currentMonth = date.format(\"MMMM\");\n  let currentDay = moment().format('D');\n\n  date.set(\"date\",selectedDay||currentDay); \n\n  let currentYear = date.format('Y')\n  let currentWeekDay = date.format('dddd')\n\n  return (\n    <>\n      <h1>{`${selectedDay||currentDay} ${currentMonth} ${currentYear}`}</h1>\n      <h2> {currentWeekDay}</h2>\n    </>\n  );\n}\n\nexport default CalendarHeader;\n","export default {\n    \"meetingRooms\": [\"Tsarevets\", \"Arbanasi\"],\n    \"meetings\": [\n        {\n            \"start\": \"2020-06-03T11:00:00.000Z\",\n            \"end\": \"2020-06-03T12:00:00.000Z\",\n            \"name\": \"Interview With A New Colleague\",\n            \"meetingRoom\": \"Tsarevets\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-03T14:00:00.000Z\",\n            \"end\": \"2020-06-03T15:30:00.000Z\",\n            \"name\": \"Daily Standup\",\n            \"meetingRoom\": \"Tsarevets\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-03T12:00:00.000Z\",\n            \"end\": \"2020-06-03T13:00:00.000Z\",\n            \"name\": \"Performance Review\",\n            \"meetingRoom\": \"Tsarevets\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-03T15:30:00.000Z\",\n            \"end\": \"2020-06-03T16:00:00.000Z\",\n            \"name\": \"New Sprint Planning\",\n            \"meetingRoom\": \"Tsarevets\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-03T17:00:00.000Z\",\n            \"end\": \"2020-06-03T18:00:00.000Z\",\n            \"name\": \"Happy Hour\",\n            \"meetingRoom\": \"Tsarevets\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-03T11:00:00.000Z\",\n            \"end\": \"2020-06-03T12:00:00.000Z\",\n            \"name\": \"MVP Presentation\",\n            \"meetingRoom\": \"Arbanasi\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-03T12:00:00.000Z\",\n            \"end\": \"2020-06-03T13:00:00.000Z\",\n            \"name\": \"Interview With A New Colleague\",\n            \"meetingRoom\": \"Arbanasi\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-03T10:00:00.000Z\",\n            \"end\": \"2020-06-03T10:30:00.000Z\",\n            \"name\": \"Morning Coffee Meeting\",\n            \"meetingRoom\": \"Arbanasi\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-04T12:00:00.000Z\",\n            \"end\": \"2020-06-04T13:00:00.000Z\",\n            \"name\": \"Interview With A New Colleague\",\n            \"meetingRoom\": \"Tsarevets\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-04T14:00:00.000Z\",\n            \"end\": \"2020-06-04T15:30:00.000Z\",\n            \"name\": \"Daily Standup\",\n            \"meetingRoom\": \"Tsarevets\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-04T11:00:00.000Z\",\n            \"end\": \"2020-06-04T12:00:00.000Z\",\n            \"name\": \"MVP Presentation\",\n            \"meetingRoom\": \"Arbanasi\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-04T10:00:00.000Z\",\n            \"end\": \"2020-06-04T10:30:00.000Z\",\n            \"name\": \"Morning Coffee Meeting\",\n            \"meetingRoom\": \"Arbanasi\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-05T10:00:00.000Z\",\n            \"end\": \"2020-06-05T11:00:00.000Z\",\n            \"name\": \"Presentation\",\n            \"meetingRoom\": \"Tsarevets\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-05T14:00:00.000Z\",\n            \"end\": \"2020-06-05T15:30:00.000Z\",\n            \"name\": \"Daily Standup\",\n            \"meetingRoom\": \"Tsarevets\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-05T11:00:00.000Z\",\n            \"end\": \"2020-06-05T12:00:00.000Z\",\n            \"name\": \"Conference Call\",\n            \"meetingRoom\": \"Arbanasi\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-05T10:00:00.000Z\",\n            \"end\": \"2020-06-05T10:30:00.000Z\",\n            \"name\": \"Morning Coffee Meeting\",\n            \"meetingRoom\": \"Arbanasi\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-09T10:00:00.000Z\",\n            \"end\": \"2020-06-09T11:00:00.000Z\",\n            \"name\": \"Presentation\",\n            \"meetingRoom\": \"Tsarevets\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-09T14:00:00.000Z\",\n            \"end\": \"2020-06-09T15:30:00.000Z\",\n            \"name\": \"Daily Standup\",\n            \"meetingRoom\": \"Tsarevets\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-09T11:00:00.000Z\",\n            \"end\": \"2020-06-09T12:00:00.000Z\",\n            \"name\": \"Conference Call\",\n            \"meetingRoom\": \"Arbanasi\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-09T10:00:00.000Z\",\n            \"end\": \"2020-06-09T10:30:00.000Z\",\n            \"name\": \"Morning Coffee Meeting\",\n            \"meetingRoom\": \"Arbanasi\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-10T10:00:00.000Z\",\n            \"end\": \"2020-06-10T11:00:00.000Z\",\n            \"name\": \"Presentation\",\n            \"meetingRoom\": \"Tsarevets\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-10T14:00:00.000Z\",\n            \"end\": \"2020-06-10T15:30:00.000Z\",\n            \"name\": \"Daily Standup\",\n            \"meetingRoom\": \"Tsarevets\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-10T11:00:00.000Z\",\n            \"end\": \"2020-06-10T12:00:00.000Z\",\n            \"name\": \"Conference Call\",\n            \"meetingRoom\": \"Arbanasi\",\n            \"participants\": []\n        },\n        {\n            \"start\": \"2020-06-10T10:00:00.000Z\",\n            \"end\": \"2020-06-10T10:30:00.000Z\",\n            \"name\": \"Morning Coffee Meeting\",\n            \"meetingRoom\": \"Arbanasi\",\n            \"participants\": []\n        }\n    ]\n}","\nimport data from '../eventsSeed/seed'\n\nexport const fillRooms = events => {\n    const rooms = {};\n    Object.keys(events).forEach(e=>{\n      const eventsPerDay = events[e];\n      const scheduledEventsperRoomForDay = eventsPerDay.reduce((r,a)=>{\n        r[a.room] = r[a.room] || [];\n        r[a.room].push(a);\n        return r;\n      },{})\n      rooms[e]=scheduledEventsperRoomForDay;\n  });\n  return rooms\n}\n\nexport const fetchData = ()=> new Promise(res=>{\n    setTimeout(()=>res(data),0)\n  });\n  \n\nexport function range(size, startAt = 0) {\n    return [...Array(size).keys()].map(i => i + startAt);\n}\n\nexport const getSelectedHours = (eventsPerDay)=> {   \n  let scheduledHours=[];\n    eventsPerDay.forEach(element => {\n      if(element.ends&&element.starts){\n        let rangeHours = range(element.ends- element.starts, element.starts);\n        scheduledHours.push(...rangeHours)\n      } \n    });\n  return scheduledHours\n}\nexport const checkForFreeSlot =(roomsAvalability) => (date,room, starts,ends)=>{\n  const usedRooms = roomsAvalability[date] !== undefined? roomsAvalability[date][room] ||[] : []\n  const scheduledHours = getSelectedHours(usedRooms);\n  const rangePerCurrentEvent = range(ends-starts,starts)\n\n  return !rangePerCurrentEvent.some(e => scheduledHours.includes(e))\n}"," const getSelectedDay = (date,selectedDay)=>{\n    const currentMonth = date.format(\"MMMM\");\n    let currentYear = date.format('Y');\n    let currentWeekDay = date.format('D');\n    return (selectedDay||currentWeekDay)+currentMonth +currentYear\n  }\n  export default getSelectedDay;","import React, {useContext, useCallback} from 'react';\nimport {DateContext} from '../CalendarWrapper'\nimport useStorage from '../utils/useStorage';\nimport { getSelectedHours,checkForFreeSlot } from '../utils/';\nimport getSelectedDay from '../utils/getSelectedDay';\n\nconst Line = ({ hour })=>{\n  const {date,setEventCreation} = useContext(DateContext);\n  const [events, setEvents]=useStorage('Store.events',{});\n  const [selectedDay]=useStorage('Store.selectedDay','');\n  const selectedDate = getSelectedDay(date,selectedDay);\n  const eventsPerDay = (events[selectedDate]||[])\n  const [rooms]= useStorage('Store.roomAvailability',{});\n\n  const scheduledHours = getSelectedHours(eventsPerDay);\n  const hasScheduledMeet = scheduledHours.includes(hour);\n\n  const isStartOfMeet = eventsPerDay.some(e => e.starts===hour && e.created === true);\n  const selectedMeets = eventsPerDay.filter(e=> e.starts === hour);\n  const checkAvailability = checkForFreeSlot(rooms);\n\n  const hasFreeSlot = checkAvailability(selectedDate,'Arbanasi',hour,hour+1) || checkAvailability(selectedDate,'Tsarevets',hour,hour+1)\n\n  const onCreateEvent = useCallback(()=>{\n      setEventCreation(true);\n      const allEventsPerDay =  events[selectedDate]||[]\n      events[selectedDate] = [...allEventsPerDay,{starts:hour,ends: null, room: null, created:false}]\n      setEvents(events)\n  },[setEventCreation,events,selectedDate,setEvents, hour]);\n\n  return <div\n        className={`line ${hasScheduledMeet && 'hasScheduledMeet'}`}\n        onClick={hasFreeSlot?onCreateEvent:null}>\n      { isStartOfMeet && selectedMeets.filter(e => e.created).map(selectedMeet=>{\n        return <p key={selectedMeet.name+selectedMeet.room}>{`${selectedMeet.name},Room: ${selectedMeet.room}: ${selectedMeet.starts}:00-${selectedMeet.ends}:00`}</p>\n      })}\n    </div>\n}\nfunction Hours() {\n  return (\n          <div className='flex column hours'>\n                  {\n                      [...Array(24).keys()].slice(1).map(e => {\n                        return <div className='flex' key={e}>\n                                    <div>{`${e>9?e:'0'+e}:00`}</div>\n                                    <Line hour={e}/>\n                        </div>\n                      })\n                  }\n                  \n          </div>\n\n  );\n}\n\nexport default Hours;\n","import React from 'react';\nimport CalendarHeaders from './CalendarHeaders'\nimport Hours from './Hours'\n\nfunction TimeBar() {\n  \n  return (\n      <div className='flex column'>\n          <CalendarHeaders/>\n          <Hours />\n      </div>  \n  );\n}\n\nexport default TimeBar;\n","import React from 'react';\nimport moment from 'moment'\n\nfunction Weekdays() {\n const weekdayshort = moment.weekdaysShort();\n\n  return (\n    <div className='weekdays'>\n            {weekdayshort.map(day => (\n              <div key={day}>\n               {day}\n              </div>\n            ))}\n        </div>     \n  );\n}\n\nexport default Weekdays;\n","import React, { useContext} from 'react';\nimport moment from 'moment'\nimport {DateContext} from '../CalendarWrapper'\nimport useStorage from '../utils/useStorage';\n\nfunction  Cell({day}){\n  const { date,setEventCreation } = useContext(DateContext);\n  const [selectedDay,setSelected]=useStorage('Store.selectedDay','');\n  const [events]=useStorage('Store.events',{});\n\n  let firstDay = parseInt(date.startOf('month').format('d'))\n  let currentDay = parseInt(moment().format('D'));\n  let cell = day+1-firstDay;\n\n\n  if(day<firstDay){//empty cells\n    return <div key={day}></div>\n  }\n\n  const isCurrentDate = cell===currentDay && moment().format('MMMM') === date.format('MMMM');\n\n  let currentDate = cell+ date.format('MMMM')+date.format('Y')\n  const hasSomeEvent = Array.isArray( events[currentDate])?events[currentDate].length>0: false\n\n  return  <div \n            className={`centered ${hasSomeEvent && 'hasEvent'} ${isCurrentDate?'currentDay': selectedDay===cell?'selectedDay': ''}`} \n            key={cell}\n            onClick={()=>{\n              setEventCreation(false)\n              setSelected(cell)}\n            }\n            >\n           \n      {cell}\n  </div>\n}\n\n\n\n\n\nexport default Cell;\n","import React, { useContext, useCallback} from 'react';\nimport moment from 'moment'\nimport {DateContext} from '../CalendarWrapper'\nimport Cell from './CalendarCell'\n\nfunction CalendarCells(){\n  const {date} = useContext(DateContext);\n  let days = date.daysInMonth();\n  let firstDay = parseInt(date.startOf('month').format('d'));\n  const daysInSelectedMonth = days+firstDay\n\n  return  (\n    <div className='days'>\n    {\n      [...Array(daysInSelectedMonth).keys()].map(e => <Cell key={e} day={e} />)\n    }\n  </div>\n  )\n}\n\nfunction Controls(){\n  const {date, setDate,setEventCreation} = useContext(DateContext);\n\n  const onPrev = useCallback(()=>{\n      setEventCreation(false)\n      date.subtract(1,'M');\n      setDate(moment({...date}))\n  },[date,setDate,setEventCreation]);\n\n  const onNext = useCallback(()=>{\n    setEventCreation(false)\n    date.add(1, 'M')\n    setDate(moment({...date}))\n  },[date,setDate,setEventCreation]);\n\n  return <div className='flex controls'>\n      <button onClick={onPrev}>Prev</button>\n      <button onClick={onNext}>Next</button>\n  </div>\n}\n\nfunction CalendarDay() {\n\n  return (\n    <>\n      <CalendarCells />\n      <Controls />\n    </>\n  );\n}\n\nexport default CalendarDay;\n","import React, {useContext, useState, useCallback, useMemo} from 'react';\nimport useStorage from '../utils/useStorage';\nimport getSelectedDay from '../utils/getSelectedDay';\nimport {fillRooms,checkForFreeSlot} from '../utils/';\nimport {DateContext} from '../CalendarWrapper'\n\nfunction NewEvent({event}) {\n  const [selectedDay]= useStorage('Store.selectedDay','');\n  const {date,setEventCreation} = useContext(DateContext);\n  const [events, setEvents]= useStorage('Store.events');\n  const [form, setForm] = useState({starts:event.starts,ends:Math.min(event.starts+1,24),room:'empty',name:'Event'});\n  const [rooms,setRooms]= useStorage('Store.roomAvailability',{});\n  const checkAvailability = checkForFreeSlot(rooms);\n  const [ error, setError] = useState(false)\n  const selectedDate = getSelectedDay(date,selectedDay);\n\n  const onSave = useCallback(()=>{\n            if(form.starts >=form.ends || form.room ==='empty'){\n              setError(true);\n              return\n            }\n\n            const currentSelectedDay = getSelectedDay(date,selectedDay);\n\n            const hasFreeSlot = checkAvailability(currentSelectedDay,form.room, form.starts, form.ends-1);\n\n             if(hasFreeSlot){\n              let meet = {...form,starts: form.starts, ends: parseInt(form.ends), room: form.room, created:true};\n\n              events[currentSelectedDay].push(meet);\n \n              let allEventsPerDay = events[currentSelectedDay].filter(e => e.ends!== null);\n              events[currentSelectedDay]= allEventsPerDay\n                setEvents(events);\n                setRooms(fillRooms(events))\n                setEventCreation(false)\n             }else{\n               setError(true)\n             }\n\n            \n  },[date,events,setEvents,setEventCreation,selectedDay,form, checkAvailability, setRooms])\n  \n  const onCancelCreate = useCallback(()=>{\n              const currentSelectedDay = getSelectedDay(date,selectedDay);\n              let allEventsPerDay = (events[currentSelectedDay]||[]).filter(e => e.ends !== null);\n              events[currentSelectedDay] = allEventsPerDay;\n              setEvents(events);\n              setEventCreation(false)\n  },[events,setEvents,setEventCreation,date,selectedDay]);\n\n  const onChange = useCallback((field)=>{\n   \n    return ({target:{value}})=>{\n\n      error && setError(false)\n      setForm(state=>({...state,[field]:value}))}\n  },[ setForm, setError,error ]);\n\nconst [isTsarevecFree, isArbanasiFree] = useMemo(()=>{\n  return [checkAvailability(selectedDate,'Tsarevets',form.starts,form.ends<form.starts? form.starts: form.ends),\n  checkAvailability(selectedDate,'Arbanasi',form.starts,form.ends<form.starts? form.starts: form.ends)\n]\n\n},[form, checkAvailability,selectedDate])\n\n  return (\n      <div className='flex column newevent'>\n         New Event\n         <div>Name<input value={form.name} onChange={onChange('name')}  ></input></div>\n         <div>Starts<input value={event.starts} readOnly ></input></div>\n         <div>Ends\n          <input value={Math.min(form.ends,24)} type='number'  onChange={onChange('ends')}></input>\n        </div>\n         <div>Room\n         <select name=\"room\" onChange={onChange('room')} value={form.room}>\n         <option value=\"empty\">Select room</option>\n            {isTsarevecFree && <option value=\"Tsarevets\">Tsarevets</option>}\n           { isArbanasiFree && <option value=\"Arbanasi\">Arbanasi</option>}\n           \n        </select>\n         </div>\n         <div className=' controls'>\n            <button onClick={onCancelCreate}>Cancel</button>\n            <button onClick={onSave}>Save</button>\n            {error && <div className='error'>Check the start/end time. Fill the room field.</div>}\n         </div>\n         </div> \n  );\n}\n\nexport default NewEvent;\n","import React, {useContext} from 'react';\nimport Weekdays from './Weekdays'\nimport CalendarDays from './CalendarDay'\nimport NewEvent from './NewEvent'\nimport {DateContext} from '../CalendarWrapper'\nimport useStorage from '../utils/useStorage';\nimport getSelectedDay from '../utils/getSelectedDay';\n\nfunction DetailedTime() {\n  const [selectedDay]=useStorage('Store.selectedDay','');\n  const {creatingEvent,date} = useContext(DateContext);\n  const selectedDate = getSelectedDay(date,selectedDay);\n  const [events]=useStorage('Store.events',{});\n\n  const event = (events[selectedDate]||[]).find(e => e.ends===null)||{}\n\n  return (\n      <div className='flex column'>\n          <Weekdays />\n          <CalendarDays />\n          {creatingEvent && <NewEvent event={event} />}\n      </div> \n  );\n}\n\nexport default DetailedTime;\n","import React, {useState, useEffect} from 'react';\nimport './styles/Common.css';\nimport './styles/Calendar.css';\nimport CalendarBar from './rightbar/CalendarBar'\nimport DetailedTime from './leftbar/DetailedTime'\nimport moment from 'moment'\nimport useStorage from './utils/useStorage';\nimport { fillRooms,fetchData } from './utils/';\n\nexport const DateContext = React.createContext();\n\nfunction CalendarWrapper() {\n  const [date,setDate]= useState(moment())\n  const [creatingEvent,setEventCreation]= useState(false);\n  const [events,setEvents]=useStorage('Store.events',{});\n  const [,setRooms] = useStorage('Store.roomAvailability',{});\n  useStorage('Store.selectedDay',moment().format('D'));\n\n\n  useEffect(()=>{\n\n    fetchData().then(response=>{\n       moment(response.meetings[0].start).format('hh:mm')\n       if(Object.keys(events).length!==0){\n         return\n       }\n       response.meetings.forEach(meet => {\n          let meetDate = moment(meet.start);\n          let meetDateLabel = meetDate.format('D')+meetDate.format(\"MMMM\")+meetDate.format('Y')\n\n          let event = {\n            starts:parseInt(meet.start.substr(meet.start.indexOf('T')+1,5)),\n            ends:parseInt(meet.end.substr(meet.start.indexOf('T')+1,5)),\n            name: meet.name,\n            room:meet.meetingRoom,\n            created:true\n          }\n          if(Array.isArray(events[meetDateLabel])){\n            events[meetDateLabel].push(event)\n          }else{\n            events[meetDateLabel]=[];\n            events[meetDateLabel].push(event)\n\n          }\n        });\n      \n        setEvents(events)\n        setRooms(fillRooms(events))\n    })\n  },[events, setEvents, setRooms])\n\n  return (\n    <div className=\"wrapper\">\n      <DateContext.Provider value={{date,setDate,creatingEvent,setEventCreation}}>\n            <CalendarBar />\n            <DetailedTime />\n      </DateContext.Provider>\n    </div>\n  );\n}\n\nexport default CalendarWrapper;\n","import React from 'react';\nimport logo from './logo.svg';\n// import './App.css';\n\nimport CalendarWrapper from './calendar/CalendarWrapper';\n\n\n\n function App() {\n\n \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header flex centered\">\n      {false &&  <img src={logo} className=\"App-logo\" alt=\"logo\" />}  \n      <CalendarWrapper />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}